apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools
    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation deps.support.app_compat
    implementation deps.support.recyclerview
    implementation deps.support.cardview
    implementation deps.support.design
    implementation deps.navigation.fragment_ktx
    implementation deps.room.runtime
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.extensions
    implementation deps.lifecycle.java8
    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.glide.runtime

    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support
    implementation deps.constraint_layout
    implementation deps.kotlin.stdlib

    implementation deps.timber

    kapt deps.dagger.android_support_compiler
    kapt deps.dagger.compiler
    kapt deps.room.compiler
    kapt deps.lifecycle.compiler

    testImplementation deps.junit
    testImplementation deps.mock_web_server
    testImplementation(deps.arch_core.testing, {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.android.support', module: 'support-core-utils'
    })
    testImplementation deps.mockito.core

    androidTestImplementation deps.navigation.testing_ktx
    androidTestImplementation deps.support.app_compat
    androidTestImplementation deps.support.recyclerview
    androidTestImplementation deps.support.cardview
    androidTestImplementation deps.support.design

    androidTestImplementation(deps.espresso.core, {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })
    androidTestImplementation(deps.espresso.contrib, {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    })

    androidTestImplementation(deps.arch_core.testing, {
    })
    androidTestImplementation deps.dexmaker
    androidTestImplementation deps.mockito.core, { exclude group: 'net.bytebuddy' }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                groupId = 'com.morrisware.android'
                artifactId 'basic'
                version = '1.0.0-SNAPSHOT'
                packaging 'aar'

                name 'basic'
                description 'basic'
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'MorrisWare'
                        name 'MorrisWare'
                        email 'MorrisWare01@gmail.com'
                    }
                }
//                scm {
//                    connection gitUrl
//                    developerConnection gitUrl
//                    url siteUrl
//                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}